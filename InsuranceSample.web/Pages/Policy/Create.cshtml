@page
@model IEnumerable<CoverType>
@{
    ViewData["Title"] = "Create a new policy";
}

<h1>Create a new policy</h1>
    <div class="row">
        <div class="col-4">
            <strong>Add items to policy</strong>
            <div class="form-row mb-lg-5">
                <div class="col">
                    <label>Select Coverage</label>
                    <select v-model="selectedCoverage" class="form-control" id="coverage">
                        <option disabled value="">Please select one</option>
                        @foreach (var coverage in Model)
                        {
                            <option value="@coverage" v-bind:value="{ CoverType: '@coverage' }">
                                @coverage
                            </option>
                        }
                    </select>
                </div>
                <div class="col">
                    <label>Percentage</label>
                    <input v-model="selectedPercentage" class="form-control" id="percentage" type="number" value="0.5" />
                </div>
            </div>
            <button v-on:click="add" :disabled='canAddToPolicy' class="btn btn-outline-success">Add to Policy</button>
        </div>
        <div class="col-4">
            <strong>Current Coverage</strong>
            <div class="mb-lg-5">
                <div class="mb-lg-5">
                    Coverages
                    <ul class="list-group">
                        <li v-for="coverage in coverages" :key="coverage.CoverType" class="list-group-item d-flex justify-content-between lh-condensed">
                            <div>
                                <h6 class="my-0">{{ coverage.coverType }}</h6>
                                <small class="text-muted">Quantity: {{ coverage.percentage }}</small>
                            </div>
                        </li>
                    </ul>
                </div>
                <div>
                    Policy details
                    <div class="form-group mb-lg-5">
                        <div class="form-group">
                            <input v-model="name" placeholder="Policy name" class="form-control">
                        </div>
                        <div class="form-group">
                            <input v-model="description" placeholder="Policy description" class="form-control">
                        </div>
                        <div class="form-group">
                            <input v-model="monthlyPremium" placeholder="Monthly premium" class="form-control">
                        </div>
                        <div class="form-group">
                            <input v-model="riskType" placeholder="Risk type" class="form-control">
                        </div>
                    </div>
                </div>
                <button v-on:click="submit" :disabled='canSubmitPolicy' class="btn btn-success">CREATE POLICY</button>
            </div>
        </div>
    </div>

    <div id="policySuccess" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Policy Creation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                </div>
            </div>
        </div>
    </div>

    @section Scripts
    {
        <script type="text/javascript">
            var app = new Vue({
                el: '#app',
                data: {
                    name: null,
                    description: null,
                    monthlyPremium: null,
                    riskType: null,

                    selectedCoverage: '',
                    selectedPercentage: 0.5,
                    coverages: new Array()
                },
                computed: {
                    canSubmitPolicy: function () {
                        return this.coverages.length == 0 || this.name == null
                    },
                    canAddToPolicy: function () {
                        return this.selectedProduct == ''
                    }
                },
                methods: {
                    add: function () {
                        var coverage = {
                            coverage: this.selectedCoverage,
                            percentage: this.selectedPercentage
                        }

                        if (product == null) return

                        this.coverages.push(coverage)
                    },
                    submit: function () {
                        var data = {
                            name: this.name,
                            descrption: this.description,
                            monthlyPremium: this.monthlyPremium,
                            riskType: this.riskType,
                            coverages: this.coverages.map(function (coverage) {
                                return {
                                    coverType: coverage.coverType,
                                    percentage: coverage.percentage
                                }
                            })
                        }

                        $.ajax({
                            url: "/Policy/Create",
                            data: data,
                            type: 'post',
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                $(".modal-body").html("<strong>ERROR</strong><p>" + XMLHttpRequest.responseText + "</p>")
                                $('#policySuccess').modal('show')
                            },
                            success: function (data) {
                                $(".modal-body").html("<strong>Success!</strong><p>The policy was successfully created</p>")
                                $('#policySuccess').modal('show')
                            }
                        });
                    }
                }
            })
        </script>
}
